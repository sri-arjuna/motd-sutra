#!/bin/bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (GPL) for more details.
#
# You should have received a copy of the GNU General Public License (GPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
	s=/bin/tui ; [[ -f $s ]] && . $s  && s=
#
#	File:		sutra2
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.12.22
#	Changed:	2014.12.22
	script_version=0.0.1
	TITLE="Vedic Sutras"
#	Description:	Text TODO
#			...  TODO
#
#
#	Script Environment
#
	ME="${0##*/}"				# Basename of sutra2
	ME="${ME/.sh/}"				# Cut off .sh extension
	#[[ ! "." = "$(dirname $0)" ]] && \
	#	ME_DIR="$(dirname $0)" || \
	#	ME_DIR="$(pwd)"			# Dirname of sutra2
	#ME_DIR=/home/sea/prjs/sutra-tui
	CONFIG_DIR="$HOME/.config/$ME"		# Configuration directory
	CONFIG="$CONFIG_DIR/$ME.conf"			# Configuration file
	TEMPFILE="$TUI_TEMP_DIR/$ME.tmp"		# Tempfile
	APP_DIR=/usr/share/sutra
	# TODO FIXME
	APP_DIR=/home/sea/prjs/sutra-tui
	LANG_DIR=$APP_DIR/lang			# langauge files are small, folders start with capital
#
#	Help text
#
#
	help_text="
$ME ($script_version)
${TITLE^}
Usage: 		$ME [options] arguments
Examples:	$ME 
		$ME -b bg
		$ME -b bg -c 5 -s 3
Where options are:
	-h(elp) 		This screen
	-b(ook)		BOOK	Select from BOOK
	-c(hapter)	CHAPTER	Select from CHAPTER
	-s(utra)	VERSE	Select this VERSE
	

Files:
--------------------------------------
Langauges:	$LANG_DIR
"
#
#	Functions
#
	GetBook() { # ABR
	# Enlrages the abrevihation to the full book title
	#
		[[ -z "$1" ]] && return 1
		out=""
		case "$1" in
		[bB][gG]|[gG]ita)	out="Bhagavad-Gita"	;;
		[sS][bB])		out="Srimad-Bhagavatam"	;;
		esac
		[[ -z "$out" ]] && \
			return 1 || \
			echo "$out"
		return 0
	}
#
#	Environment checks
#
	
#
#	Catching Arguments
#
	# A ':' after a char indicates that this option requires an argument
	BOOK=rnd
	CHAPTER=rnd
	SUTRA=rnd
	LANG=german
	while getopts "hb:c:s:" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		b)	# BOOK
			BOOK="$OPTARG"
			;;
		c)	# Chapter
			CHAPTER="$OPTARG"
			;;
		s)	# Chapter
			SUTRA="$OPTARG"
			;;
		l)	LANG="$OPTARG"
			;;
		*)	printf "$help_text" 
			exit $?
			;;
		esac
	done
	shift $(($OPTIND - 1))	# All options and they (if applicable) mandatory argument are removed
	ARGS=("${*}")			# Remaining arguments
#
#	Parse & verify arguments
#
	LANG_CONF="$LANG_DIR/$LANG"
	if [[ -f "$LANG_CONF" ]]
	then	source "$LANG_CONF" || exit 1
	else	exit 1
	fi
	
	# Book
	if [[ rnd = "$BOOK" ]]
	then	# Set random book
		BOOK=$(ls ${LANG_DIR}/${LANG^^})
	else	# Make sure passed argument is a valid book
		BOOK=$(GetBook $BOOK)
	fi
	BOOK_DIR="${LANG_DIR}/${LANG^^}/$BOOK"
	
	# Chapter
	if [[ rnd = "$CHAPTER" ]]
	then	# Set random book
		declare LIST
		LIST=( $(ls "$BOOK_DIR"/*))
		max=$(( ${#LIST[@]} - 1 ))
		num=$(rnd 1 $max)
		while [[ rnd = "$CHAPTER" ]] || [[ "" = "$CHAPTER" ]]
		do	CHAPTER=${LIST[$num]}
			num=$(rnd 1 $max)
		done
		#CHAPTER=$(basename $(echo $LIST|awk '{print $1}'))
		CHAPTER=$(basename $( ls "$BOOK_DIR"/*|grep $num))
	else	# Make sure passed argument is a valid chapter-file
		#echo "TODO chapter details"
		CHAPTER=$( cd "$BOOK_DIR"; ls|grep $CHAPTER)
		[[ -z "$CHAPTER" ]] && \
			CHAPTER$(($CHAPTER + 1)) && \
			CHAPTER=$( cd "$BOOK_DIR"; ls|grep $CHAPTER) 
	fi
	
	thatFile="${LANG_DIR}/${LANG^^}/$BOOK/$CHAPTER"
	[[ -z $thatFile ]] && $0 $@ && exit 0
	[[ -d "$thatFile" ]] && $0 $@ && exit 0
	
	# Sutra
	if [[ rnd = "$SUTRA" ]]
	then	# Set random sutra number
		max=$(cat $thatFile|wc -l)
		SUTRA=$(rnd $max)
	fi
#
#	Display & Action
#
	tui-title "$TITLE - $BOOK - $CHAPTER - $SUTRA"
	VERS=$(cat -n  "$thatFile" | grep $SUTRA | while read num line;do echo "$line";done)
	
	# Now modify the string accordign to the original languages template
	case $LANG in
	german)		# Deutsche Umlaute
			VERS=$(echo "$VERS"|sed s,'ä',ae,g)
			VERS=$(echo "$VERS"|sed s,'ö',oe,g)
			VERS=$(echo "$VERS"|sed s,'ü',ue,g)
			VERS=$(echo "$VERS"|sed s,"Ä",Ae,g)
			VERS=$(echo "$VERS"|sed s,"Ö",Oe,g)
			VERS=$(echo "$VERS"|sed s,"Ü",Ue,g)
			;;
	esac
	
#	echo "$VERS"
#	tui-header
	
	WIDTH=$(tput cols)
	len=$(( 2 * ${#BORDER_LEFT} ))
	WIDTH=$(( $WIDTH - $LEN - 4 ))
	
	
	while [[ "${#VERS}" -gt $WIDTH ]]
	do	tui-echo "${VERS:0:$WIDTH}}"
		VERS="${VERS:$WIDTH}"
	done
	tui-echo "$VERS"
